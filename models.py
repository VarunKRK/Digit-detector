
import torch 
import torch.nn as nn 
import torchvision


######################################################################################################################################
######################################################################################################################################
######################################################################################################################################

class DigitRecognizer(nn.Module):

     def __init__(self):

          super(DigitRecognizer, self).__init__()
          self.input = nn.Linear(784, 128)
          self.relu_1 = nn.ReLU()
          self.hidden = nn.Linear(128, 64)
          self.relu_2 = nn.ReLU()
          self.output = nn.Linear(64, 10)

     def forward(self, X):
          X = self.input(X)
          X = self.relu_1(X)
          X = self.hidden(X)
          X = self.relu_2(X)
          X = self.output(X)

          return X 

######################################################################################################################################
######################################################################################################################################
######################################################################################################################################